---

# Register token
# for first run, do not include continuation_token when value is 'firstPage'
- name: "Register variable..."
  ansible.builtin.set_fact:
    page_url: >-
      {{ nexus_repository_address }}/service/rest/v1/search/assets?repository={{ nexus_repository_name }}{{ search_query }}{% if continuation_token != '' and continuation_token != 'firstPage' %}&continuationToken={{ continuation_token }}{% endif %}

# Get assets from Nexus repository
- name: "Retrieve assets from repository {{ nexus_repository_name }}..."
  ansible.builtin.uri:
    url: "{{ page_url }}"
    method: GET
    user: "{{ nexus_repository_username }}"
    password: "{{ nexus_repository_password }}"
    force_basic_auth: yes
    return_content: yes
    body_format: json
    validate_certs: "{{ nexus_repository_validate_certs | default(true) }}"
    headers:
      accept: application/json
      Content-Type: application/json
  register: search_result

# Set retrieved file URLs
- name: Set retrieved file URLs
  ansible.builtin.set_fact:
    file_urls: "{{ ( file_urls | default([]) + search_result.json['items'] | map(attribute='downloadUrl') | list ) }}"
  when: search_result.status == 200 and search_result.json['items'] is defined

# Set continuation token
- name: Set continuation token for pagination
  ansible.builtin.set_fact:
    continuation_token: "{{ search_result.json.continuationToken }}"
  when: search_result.status == 200

# Rerun myself if continuation_token not empty
- name: "Rerun task to get next page of assets if continuation token is present..."
  ansible.builtin.include_tasks: export_artifacts_get_assets_list.yml
  when: continuation_token != ''
