---

#########################################################
## Sonatype Nexus Repository artifacts export          ##
#########################################################

# Validate local variables
- name: Validate local variables for Nexus Repository export_artifacts action.
  ansible.builtin.assert:
    that: "vars[varitem] is defined"
    fail_msg: "Required variable '{{ varitem }}' has not been provided."
    quiet: true
  loop_control:
    loop_var: varitem
  loop:
    - nexus_repository_address
    - nexus_repository_username
    - nexus_repository_password
    - nexus_repository_name
    - nexus_repository_folder
    - destination_folder

# Test if repository name is valid.
- name: "Test if repository name is valid ({{ nexus_repository_name }})..."
  ansible.builtin.uri:
    url: "{{ nexus_repository_address }}/service/rest/v1/repositories/{{ nexus_repository_name }}"
    method: GET
    user: "{{ nexus_repository_username }}"
    password: "{{ nexus_repository_password }}"
    force_basic_auth: yes
    return_content: yes
    validate_certs: "{{ nexus_repository_validate_certs | default(true) }}"
    headers:
      accept: application/json
      Content-Type: application/json
  register: nexus_repository_status

# Show custom error message if repository address is not valid.
- name: Information message...
  ansible.builtin.fail:
    msg: "Cannot find {{ nexus_repository_name }} on '{{ nexus_repository_address }}'..."
  when: nexus_repository_status.status != 200

# Ensure destination folder exists
- name: "Ensure destination folder {{ destination_folder }} exists..."
  ansible.builtin.file:
    path: "{{ destination_folder }}"
    state: directory
    mode: "0755"

# Set search query based on repository name and folder. Replace special chars
- name: Register variables...
  ansible.builtin.set_fact:
    search_query: "&q={{ nexus_repository_folder | trim | urlencode }}"
    file_urls: [] # result of search query will be stored here
    search_list: [] # list of artifacts to search for   
    continuation_token: "firstPage"

# Get assets list from Nexus Repository
- name: Get assets list from Nexus Repository...
  ansible.builtin.include_tasks: export_artifacts_get_assets_list.yml

# Show information message
- name: Export artifacts - information message
  debug:
    msg:
      - "Total of {{ file_urls | length }} files found to export from repository {{ nexus_repository_name}} on {{ nexus_repository_address}}..."
      - "Downloading files to folder '{{ destination_folder }}'. This may take a while..."

# include task to download each asset
- name: "Start artifacts_export task..."
  ansible.builtin.include_tasks: export_artifacts_item.yml
  loop: "{{ file_urls }}"
  loop_control:
    label: "{{ item }}"
  no_log: true